{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","console","dir","start","getTimeComponents","setInterval","currentTime","Date","now","deltaTime","time","days","pad","Math","floor","hours","mins","secs","log","document","querySelector","innerHTML","value","String","padStart","timer","timer2"],"mappings":";AA4CA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA5COA,IAAAA,EAAAA,WACgC,SAAA,EAAA,GAAvBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAC9BD,KAAAA,SAAWA,EAChBE,QAAQC,IAAI,KAAKH,UACZC,KAAAA,WAAaA,EAEbG,KAAAA,QAsCT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAnCA,MAAA,WAAQ,IAAA,EAAA,KACCC,KAAAA,kBAAkB,GAEvBC,YAAY,WACNC,IAAAA,EAAcC,KAAKC,MACjBC,EAAa,EAAKT,WAAYM,EACpC,EAAKF,kBAAkBK,IACtB,OA4BP,CAAA,IAAA,oBAzBE,MAAA,SAAkBC,GACRC,IAAAA,EAAO,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QACnCK,EAAQ,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAC9DM,EAAO,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MACxDO,EAAO,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,MAEzDT,QAAQiB,IAAI,CAACP,KAAAA,EAAMI,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,IAEhCE,SAASC,cAAiB,GAAA,OAAA,KAAKrB,SAAuCsB,gCAAAA,UAAYV,EAClFQ,SAASC,cAAiB,GAAA,OAAA,KAAKrB,SAAwCsB,iCAAAA,UAAYN,EACnFI,SAASC,cAAiB,GAAA,OAAA,KAAKrB,SAAuCsB,gCAAAA,UAAYL,EAClFG,SAASC,cAAiB,GAAA,OAAA,KAAKrB,SAAuCsB,gCAAAA,UAAYJ,IAcvF,CAAA,IAAA,MAVI,MAAA,SAAIK,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SASvC,EA5CO1B,GAuCD2B,EAAQ,IAAI3B,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIO,KAAK,kBAGjBmB,EAAS,IAAI5B,EAAe,CAChCC,SAAU,WACVC,WAAY,IAAIO,KAAK","file":"src.1b45b618.js","sourceRoot":"..\\src","sourcesContent":[" class CountdownTimer {\r\n  constructor ({selector, targetDate}) {\r\n    this.selector = selector; \r\n    console.dir(this.selector);   \r\n    this.targetDate = targetDate;\r\n\r\n    this.start();          \r\n  }\r\n\r\nstart() {   \r\n    this.getTimeComponents(0)\r\n    \r\n    setInterval(() => {\r\n      let currentTime = Date.now();        \r\n      const deltaTime =  this.targetDate -currentTime;      \r\n      this.getTimeComponents(deltaTime);        \r\n    }, 1000); \r\n  }  \r\n\r\n  getTimeComponents(time) {\r\n      const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));  \r\n      const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n      const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n      const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    \r\n     console.log({days, hours, mins, secs});\r\n    \r\n     document.querySelector(`${this.selector}>.field>[data-value =\"days\"`).innerHTML = days;\r\n     document.querySelector(`${this.selector}>.field>[data-value =\"hours\"`).innerHTML = hours;\r\n     document.querySelector(`${this.selector}>.field>[data-value =\"mins\"`).innerHTML = mins;\r\n     document.querySelector(`${this.selector}>.field>[data-value =\"secs\"`).innerHTML = secs;\r\n    \r\n    }\r\n            \r\n    pad(value) {\r\n      return String(value).padStart(2, '0');\r\n    }   \r\n  }; \r\n  \r\nconst timer = new CountdownTimer({ \r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n});\r\n\r\nconst timer2 = new CountdownTimer({ \r\n  selector: '#timer-2',\r\n  targetDate: new Date('Dec 17, 2021'),\r\n});\r\n\r\n"]}