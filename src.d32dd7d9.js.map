{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","start","getTimeComponents","setInterval","currentTime","Date","now","deltaTime","time","days","pad","Math","floor","hours","mins","secs","console","log","document","querySelector","innerHTML","value","String","padStart","timer"],"mappings":";AAoCA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EApCOA,IAAAA,EAAAA,WACgC,SAAA,EAAA,GAAvBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAC9BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAEbC,KAAAA,QA+BT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA5BA,MAAA,WAAQ,IAAA,EAAA,KACCC,KAAAA,kBAAkB,GAEvBC,YAAY,WACNC,IAAAA,EAAcC,KAAKC,MACjBC,EAAa,EAAKP,WAAYI,EACpC,EAAKF,kBAAkBK,IACtB,OAqBP,CAAA,IAAA,oBAlBE,MAAA,SAAkBC,GACRC,IAAAA,EAAO,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QACnCK,EAAQ,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAC9DM,EAAO,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MACxDO,EAAO,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,MAE1DQ,QAAQC,IAAI,CAACR,KAAAA,EAAMI,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,IAC9BG,SAASC,cAAc,uBAAuBC,UAAYX,EAC1DS,SAASC,cAAc,wBAAwBC,UAAYP,EAC3DK,SAASC,cAAc,wBAAwBC,UAAYN,EAC3DI,SAASC,cAAc,uBAAuBC,UAAYL,IAQhE,CAAA,IAAA,MALI,MAAA,SAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAIvC,EApCOzB,GAoCD0B,EAAQ,IAAI1B,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIK,KAAK","file":"src.d32dd7d9.js","sourceRoot":"..\\src","sourcesContent":[" class CountdownTimer {\r\n  constructor ({selector, targetDate}) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n\r\n    this.start();          \r\n  }\r\n\r\nstart() {   \r\n    this.getTimeComponents(0)\r\n    \r\n    setInterval(() => {\r\n      let currentTime = Date.now();        \r\n      const deltaTime =  this.targetDate -currentTime;      \r\n      this.getTimeComponents(deltaTime);        \r\n    }, 1000); \r\n  }  \r\n\r\n  getTimeComponents(time) {\r\n      const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));  \r\n      const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n      const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n      const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    \r\n    console.log({days, hours, mins, secs});\r\n      document.querySelector('[data-value=\"days\"]').innerHTML = days;\r\n      document.querySelector('[data-value=\"hours\"]').innerHTML = hours;\r\n      document.querySelector('[ data-value=\"mins\"]').innerHTML = mins;\r\n      document.querySelector('[data-value=\"secs\"]').innerHTML = secs;      \r\n      }\r\n            \r\n    pad(value) {\r\n      return String(value).padStart(2, '0');\r\n    }   \r\n  }; \r\n  \r\nconst timer = new CountdownTimer({ \r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n});\r\n\r\n"]}